{"version":3,"sources":["components/Search.js","components/Photo.js","components/PhotoList.js","App.js","index.js"],"names":["Search","searchPhotos","query","setQuery","onSubmit","type","placeholder","value","onChange","e","target","Photo","index","image","className","key","href","links","html","rel","src","urls","regular","alt","alt_description","PhotoList","images","map","require","config","accessKey","process","App","useState","setImages","page","setPage","getPhotos","useCallback","apiUrl","fetch","then","response","json","data","imagesFromApi","results","useEffect","preventDefault","dataLength","length","next","hasMore","loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEe,SAASA,EAAT,GAAoD,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACpD,OACE,0BAAMC,SAAUH,GACd,2BACEI,KAAK,OACLC,YAAY,qBACZC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOH,UAGrC,2CCVS,SAASI,EAAT,GAAkC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACrC,OACE,uBACEC,UAAU,QACVC,IAAKH,EACLI,KAAMH,EAAMI,MAAMC,KAClBR,OAAO,SACPS,IAAI,uBAEJ,yBAAKC,IAAKP,EAAMQ,KAAKC,QAASC,IAAKV,EAAMW,mBCRhC,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAClC,OACE,yBAAKZ,UAAU,cACZY,EAAOC,KAAI,SAACd,EAAOD,GAAR,OACV,kBAACD,EAAD,CAAOE,MAAOA,EAAOD,MAAOA,QCFpCgB,EAAQ,IAAUC,SAElB,IAAMC,EAAYC,8CAEH,SAASC,IAAO,IAAD,EACAC,mBAAS,IADT,mBACrBP,EADqB,KACbQ,EADa,OAEJD,mBAAS,GAFL,mBAErBE,EAFqB,KAEfC,EAFe,OAGFH,mBAAS,IAHP,mBAGrB/B,EAHqB,KAGdC,EAHc,KAKtBkC,EAAYC,uBAAY,WAC5B,IAAIC,EAAM,mCACNrC,IACFqC,EAAM,wDAAoDrC,IAE5DqC,GAAM,gBAAaJ,GACnBI,GAAM,qBAAkBT,GACxBU,MAAMD,GACHE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAU,IAAD,EACRC,EAAa,UAAGD,EAAKE,eAAR,QAAmBF,EACzB,IAATT,GAAYD,EAAUW,GAC1BX,GAAU,SAACR,GAAD,4BAAgBA,GAAhB,YAA2BmB,YAExC,CAACV,EAAMjC,IAEV6C,qBAAU,WACRV,MACC,CAACF,EAAME,IAgBV,OACE,yBAAKvB,UAAU,OACb,uDACA,kBAACd,EAAD,CAAQC,aAjBS,SAACQ,GACpBA,EAAEuC,iBACFZ,EAAQ,GACRC,KAcsCnC,MAAOA,EAAOC,SAAUA,IAC5D,kBAAC,IAAD,CACE8C,WAAYvB,EAAOwB,OACnBC,KAAM,kBAAMf,GAAQ,SAACD,GAAD,OAAUA,EAAO,MACrCiB,SAAS,EACTC,OAAQ,2CAER,kBAAC5B,EAAD,CAAWC,OAAQA,MCtD3B4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.23c4ee79.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Search({ searchPhotos, query, setQuery }) {\n  return (\n    <form onSubmit={searchPhotos}>\n      <input\n        type=\"text\"\n        placeholder=\"Search Unsplash...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n\n      <button>Search</button>\n    </form>\n  );\n}\n","import React from 'react';\n\nexport default function Photo({ index, image }) {\n  return (\n    <a\n      className=\"image\"\n      key={index}\n      href={image.links.html}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img src={image.urls.regular} alt={image.alt_description} />\n    </a>\n  );\n}\n","import React from 'react';\nimport Photo from './Photo';\n\nexport default function PhotoList({ images }) {\n  return (\n    <div className=\"image-grid\">\n      {images.map((image, index) => (\n        <Photo image={image} index={index} />\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport './App.scss';\nimport Search from './components/Search';\nimport PhotoList from './components/PhotoList';\nrequire('dotenv').config();\n\nconst accessKey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY;\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState('');\n\n  const getPhotos = useCallback(() => {\n    let apiUrl = `https://api.unsplash.com/photos?`;\n    if (query)\n      apiUrl = `https://api.unsplash.com/search/photos?&query=${query}`;\n\n    apiUrl += `&page=${page}`;\n    apiUrl += `&client_id=${accessKey}`;\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        const imagesFromApi = data.results ?? data;\n        if (page === 1) setImages(imagesFromApi);\n        setImages((images) => [...images, ...imagesFromApi]);\n      });\n  }, [page, query]);\n\n  useEffect(() => {\n    getPhotos();\n  }, [page, getPhotos]);\n\n  const searchPhotos = (e) => {\n    e.preventDefault();\n    setPage(1);\n    getPhotos();\n  };\n\n  if (!accessKey) {\n    return (\n      <a href=\"https://unsplash.com/developers\" className=\"error\">\n        Grab Your Key Here!\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Unsplash Image Gallery!</h1>\n      <Search searchPhotos={searchPhotos} query={query} setQuery={setQuery} />\n      <InfiniteScroll\n        dataLength={images.length}\n        next={() => setPage((page) => page + 1)}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n      >\n        <PhotoList images={images} />\n      </InfiniteScroll>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}